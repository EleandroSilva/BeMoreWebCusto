unit Model.Imp.Entidade.Aliquota.Nome;

interface

uses
  Model.Entidade.Aliquota.Nome.Interfaces;

type
  TAliquotaNome<T : Interfaces > = class(TInterfacedObject, iAliquotaNome<T>)
    private
      [Weak]
      FParent : T;

    public
      constructor Create(Parent : T);
      destructor Destroy; override;
      class function New(Parent : T) : iAliquotaNome<T>;

      function Id(Value : Integer)               : iAliquotaNome<T>; overload;
      function Id : Integer;                                         overload;
      {Status uso para definir se o registro da tabela é margem de lucro da empresa 1-Sim margem de lucro 2-Não é margem de lucro}
      function Status(Value : Integer)           : iAliquotaNome<T>; overload;
      function Status : Integer;                                     overload;
      function Descricao(Value : String)         : iAliquotaNome<T>; overload;
      function Descricao : String;                                   overload;
      function Aliquota(Value : Currency)        : iAliquotaNome<T>; overload;
      function Aliquota : Currency;                                  overload;
      function Operador(Value : String)          : iAliquotaNome<T>; overload;
      function Operador : String;                                    overload;
      function DataLancamento(Value : TDateTime) : iAliquotaNome<T>; overload;
      function DataLancamento : TDateTime;                           overload;
      function Financeiro(Value : Integer)       : iAliquotaNome<T>; overload;
      function Financeiro : Integer;                                 overload;
      function Ativo(Value : Integer)            : iAliquotaNome<T>; overload;
      function Ativo : Integer;                                      overload;

      function &End : T;
  end;

implementation

end.
